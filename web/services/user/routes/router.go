// Code generated by jrpc. DO NOT EDIT.

package routes

import (
	context "context"

	taxi "github.com/jakewright/home-automation/libraries/go/taxi"
	def "github.com/jakewright/home-automation/services/user/def"
)

// taxiRouter is an interface implemented by taxi.Router
type taxiRouter interface {
	HandleFunc(method, path string, handler func(context.Context, taxi.Decoder) (interface{}, error))
}

type handler interface {
	GetUser(ctx context.Context, body *def.GetUserRequest) (*def.GetUserResponse, error)
	ListUsers(ctx context.Context, body *def.ListUsersRequest) (*def.ListUsersResponse, error)
}

// Register adds the service's routes to the router
func Register(r taxiRouter, h handler) {
	r.HandleFunc("GET", "/user", func(ctx context.Context, decode taxi.Decoder) (interface{}, error) {
		body := &def.GetUserRequest{}
		if err := decode(body); err != nil {
			return nil, err
		}

		if err := body.Validate(); err != nil {
			return nil, err
		}

		return h.GetUser(ctx, body)
	})

	r.HandleFunc("GET", "/users", func(ctx context.Context, decode taxi.Decoder) (interface{}, error) {
		body := &def.ListUsersRequest{}
		if err := decode(body); err != nil {
			return nil, err
		}

		if err := body.Validate(); err != nil {
			return nil, err
		}

		return h.ListUsers(ctx, body)
	})

}
