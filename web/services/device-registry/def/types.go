// Code generated by jrpc. DO NOT EDIT.

package deviceregistrydef

import (
	def "github.com/jakewright/home-automation/libraries/go/device/def"
	oops "github.com/jakewright/home-automation/libraries/go/oops"
)

// Room is defined in the .def file
type Room struct {
	Id      *string       `json:"id,omitempty"`
	Name    *string       `json:"name,omitempty"`
	Devices []*def.Header `json:"devices,omitempty"`
}

// GetId returns the de-referenced value of Id.
// If the field is nil, the function panics because id is marked as required.
func (m *Room) GetId() (val string) {
	if m.Id == nil {
		panic("id marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.Id
}

// SetId sets the value of Id
func (m *Room) SetId(v string) *Room {
	m.Id = &v
	return m
}

// GetName returns the de-referenced value of Name.
// If the field is nil, the function panics because name is marked as required.
func (m *Room) GetName() (val string) {
	if m.Name == nil {
		panic("name marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.Name
}

// SetName sets the value of Name
func (m *Room) SetName(v string) *Room {
	m.Name = &v
	return m
}

// GetDevices returns the de-referenced value of Devices.
// The second return value states whether the field was set.
func (m *Room) GetDevices() (val []*def.Header, set bool) {
	if m.Devices == nil {
		return
	}

	return m.Devices, true
}

// SetDevices sets the value of Devices
func (m *Room) SetDevices(v []*def.Header) *Room {
	m.Devices = v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *Room) Validate() error {
	if m.Id == nil {
		return oops.BadRequest("field 'id' is required")
	}
	if m.Name == nil {
		return oops.BadRequest("field 'name' is required")
	}
	if m.Devices != nil {
		for _, r := range m.Devices {
			if err := r.Validate(); err != nil {
				return err
			}
		}
	}

	return nil
}

// GetDeviceRequest is defined in the .def file
type GetDeviceRequest struct {
	DeviceId *string `json:"device_id,omitempty"`
}

// GetDeviceId returns the de-referenced value of DeviceId.
// If the field is nil, the function panics because device_id is marked as required.
func (m *GetDeviceRequest) GetDeviceId() (val string) {
	if m.DeviceId == nil {
		panic("device_id marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.DeviceId
}

// SetDeviceId sets the value of DeviceId
func (m *GetDeviceRequest) SetDeviceId(v string) *GetDeviceRequest {
	m.DeviceId = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *GetDeviceRequest) Validate() error {
	if m.DeviceId == nil {
		return oops.BadRequest("field 'device_id' is required")
	}
	return nil
}

// GetDeviceResponse is defined in the .def file
type GetDeviceResponse struct {
	DeviceHeader *def.Header `json:"device_header,omitempty"`
}

// GetDeviceHeader returns the de-referenced value of DeviceHeader.
// The second return value states whether the field was set.
func (m *GetDeviceResponse) GetDeviceHeader() (val def.Header, set bool) {
	if m.DeviceHeader == nil {
		return
	}

	return *m.DeviceHeader, true
}

// SetDeviceHeader sets the value of DeviceHeader
func (m *GetDeviceResponse) SetDeviceHeader(v def.Header) *GetDeviceResponse {
	m.DeviceHeader = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *GetDeviceResponse) Validate() error {
	if err := m.DeviceHeader.Validate(); err != nil {
		return err
	}

	return nil
}

// ListDevicesRequest is defined in the .def file
type ListDevicesRequest struct {
	ControllerName *string `json:"controller_name,omitempty"`
}

// GetControllerName returns the de-referenced value of ControllerName.
// The second return value states whether the field was set.
func (m *ListDevicesRequest) GetControllerName() (val string, set bool) {
	if m.ControllerName == nil {
		return
	}

	return *m.ControllerName, true
}

// SetControllerName sets the value of ControllerName
func (m *ListDevicesRequest) SetControllerName(v string) *ListDevicesRequest {
	m.ControllerName = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *ListDevicesRequest) Validate() error {
	return nil
}

// ListDevicesResponse is defined in the .def file
type ListDevicesResponse struct {
	DeviceHeaders []*def.Header `json:"device_headers,omitempty"`
}

// GetDeviceHeaders returns the de-referenced value of DeviceHeaders.
// The second return value states whether the field was set.
func (m *ListDevicesResponse) GetDeviceHeaders() (val []*def.Header, set bool) {
	if m.DeviceHeaders == nil {
		return
	}

	return m.DeviceHeaders, true
}

// SetDeviceHeaders sets the value of DeviceHeaders
func (m *ListDevicesResponse) SetDeviceHeaders(v []*def.Header) *ListDevicesResponse {
	m.DeviceHeaders = v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *ListDevicesResponse) Validate() error {
	if m.DeviceHeaders != nil {
		for _, r := range m.DeviceHeaders {
			if err := r.Validate(); err != nil {
				return err
			}
		}
	}

	return nil
}

// GetRoomRequest is defined in the .def file
type GetRoomRequest struct {
	RoomId *string `json:"room_id,omitempty"`
}

// GetRoomId returns the de-referenced value of RoomId.
// If the field is nil, the function panics because room_id is marked as required.
func (m *GetRoomRequest) GetRoomId() (val string) {
	if m.RoomId == nil {
		panic("room_id marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.RoomId
}

// SetRoomId sets the value of RoomId
func (m *GetRoomRequest) SetRoomId(v string) *GetRoomRequest {
	m.RoomId = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *GetRoomRequest) Validate() error {
	if m.RoomId == nil {
		return oops.BadRequest("field 'room_id' is required")
	}
	return nil
}

// GetRoomResponse is defined in the .def file
type GetRoomResponse struct {
	Room *Room `json:"room,omitempty"`
}

// GetRoom returns the de-referenced value of Room.
// The second return value states whether the field was set.
func (m *GetRoomResponse) GetRoom() (val Room, set bool) {
	if m.Room == nil {
		return
	}

	return *m.Room, true
}

// SetRoom sets the value of Room
func (m *GetRoomResponse) SetRoom(v Room) *GetRoomResponse {
	m.Room = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *GetRoomResponse) Validate() error {
	if err := m.Room.Validate(); err != nil {
		return err
	}

	return nil
}

// ListRoomsRequest is defined in the .def file
type ListRoomsRequest struct {
}

// Validate returns an error if any of the fields have bad values
func (m *ListRoomsRequest) Validate() error {
	return nil
}

// ListRoomsResponse is defined in the .def file
type ListRoomsResponse struct {
	Rooms []*Room `json:"rooms,omitempty"`
}

// GetRooms returns the de-referenced value of Rooms.
// The second return value states whether the field was set.
func (m *ListRoomsResponse) GetRooms() (val []*Room, set bool) {
	if m.Rooms == nil {
		return
	}

	return m.Rooms, true
}

// SetRooms sets the value of Rooms
func (m *ListRoomsResponse) SetRooms(v []*Room) *ListRoomsResponse {
	m.Rooms = v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *ListRoomsResponse) Validate() error {
	if m.Rooms != nil {
		for _, r := range m.Rooms {
			if err := r.Validate(); err != nil {
				return err
			}
		}
	}

	return nil
}
