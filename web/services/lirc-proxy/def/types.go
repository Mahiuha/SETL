// Code generated by jrpc. DO NOT EDIT.

package lircproxydef

import (
	oops "github.com/jakewright/home-automation/libraries/go/oops"
)

// SendOnceRequest is defined in the .def file
type SendOnceRequest struct {
	Device *string `json:"device,omitempty"`
	Key    *string `json:"key,omitempty"`
}

// GetDevice returns the de-referenced value of Device.
// If the field is nil, the function panics because device is marked as required.
func (m *SendOnceRequest) GetDevice() (val string) {
	if m.Device == nil {
		panic("device marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.Device
}

// SetDevice sets the value of Device
func (m *SendOnceRequest) SetDevice(v string) *SendOnceRequest {
	m.Device = &v
	return m
}

// GetKey returns the de-referenced value of Key.
// If the field is nil, the function panics because key is marked as required.
func (m *SendOnceRequest) GetKey() (val string) {
	if m.Key == nil {
		panic("key marked as required but was not set. This should have been caught by the validate function.")
	}

	return *m.Key
}

// SetKey sets the value of Key
func (m *SendOnceRequest) SetKey(v string) *SendOnceRequest {
	m.Key = &v
	return m
}

// Validate returns an error if any of the fields have bad values
func (m *SendOnceRequest) Validate() error {
	if m.Device == nil {
		return oops.BadRequest("field 'device' is required")
	}
	if m.Key == nil {
		return oops.BadRequest("field 'key' is required")
	}
	return nil
}

// SendOnceResponse is defined in the .def file
type SendOnceResponse struct {
}

// Validate returns an error if any of the fields have bad values
func (m *SendOnceResponse) Validate() error {
	return nil
}
