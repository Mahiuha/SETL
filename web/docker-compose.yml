# Using version 2.1 for _extends_ support
version: '2.1'

services:
  # Templates
  go-service:
    build:
      dockerfile: dockerfiles/go.dev.dockerfile
      context: .
    volumes:
      - .:/app
    env_file:
      - ./private/config/dev/common.env

  # Services
  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - 8080:8080

  filebeat:
    build:
      dockerfile: filebeat/Dockerfile
      context: .
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  fluentd:
    build:
      dockerfile: Dockerfile
      context: ./services/fluentd/
    volumes:
      - ./services/fluentd/log:/fluentd/log
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    env_file:
      - ./private/config/dev/fluentd.env


  logstash:
    build:
      dockerfile: logstash/Dockerfile
      context: .
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./log:/var/log
    ports:
      - 7514:7514 # Syslog
      - 5044:5044 # Beats

  mysql:
    image: mysql:latest
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: home_automation
    ports:
      - 3306:3306

  redis:
    image: redis:6.0
    ports:
      - 6379:6379

  api-gateway:
    image: jakewright/drawbridge
    volumes:
      - ./services/api-gateway/config.dev.yaml:/config/config.yaml
    ports:
      - 7005:80

  service.controller.hue:
    build:
      dockerfile: ./service.controller.hue/dev.dockerfile
      context: .
    image: home-automation-controller-hue
    volumes:
      - ./service.controller.hue:/usr/src/app
      - /usr/src/app/node_modules
      - ./libraries/javascript:/usr/src/libraries/javascript
      - /usr/src/libraries/javascript/node_modules
    ports:
      - 7007:80
    environment:
      NODE_ENV: development

  service.controller.infrared:
    build:
      dockerfile: ./service.controller.infrared/dev.dockerfile
      context: .
    image: home-automation-controller-infrared
    volumes:
      - ./service.controller.infrared:/usr/src/app
      - /usr/src/app/node_modules
      - ./libraries/javascript:/usr/src/libraries/javascript
      - /usr/src/libraries/javascript/node_modules
    ports:
      - 7008:80

  service.controller.plug:
    build:
      dockerfile: service.controller.plug/dev.dockerfile
      context: .
    image: home-automation-controller-plug
    volumes:
      - ./service.controller.plug:/usr/src/app
      - /usr/src/app/node_modules
      - ./libraries/javascript:/usr/src/libraries/javascript
      - /usr/src/libraries/javascript/node_modules
    ports:
      - 7009:80
    environment:
      NODE_ENV: development

  device-registry:
    extends:
      service: go-service
    build:
      args:
        service_name: device-registry
    ports:
      - 7001:80
    env_file:
      - ./private/config/dev/device-registry.env

  dmx:
    extends:
      service: go-service
    build:
      args:
        service_name: dmx
    ports:
      - 7012:80
    env_file:
      - private/config/dev/dmx.env

  dummy:
    extends:
      service: go-service
    build:
      args:
        service_name: dummy
    ports:
      - 7014:80
    env_file:
      - private/config/dev/common.env

  event-bus:
    build:
      dockerfile: services/event-bus/dev.dockerfile
      context: .
    image: home-automation-service-event-bus
    volumes:
      - ./service.event-bus:/usr/src/app
      - /usr/src/app/node_modules
      - ./libraries/javascript:/usr/src/libraries/javascript
      - /usr/src/libraries/javascript/node_modules
    ports:
      - 7004:80
    environment:
      NODE_ENV: development

  log:
    extends:
      service: go-service
    build:
      args:
        service_name: log
    volumes:
      - ./log/:/var/log:ro
    ports:
      - 7020:80

  mongo:
    image: mongo:4.4.2-bionic
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: home_automation_logs
    volumes:
      - ./data/mongo:/data/db
      - ./services/mongo/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret


  ping:
    extends:
      service: go-service
    build:
      args:
        service_name: ping
    ports:
      - 7011:80

  scene:
    extends:
      service: go-service
    build:
        args:
          service_name: scene
    ports:
      - 7010:80

  user:
    extends:
      service: go-service
    build:
      args:
        service_name: user
    ports:
      - 7013:80

  web.client:
    build:
      dockerfile: ./web.client/dev.dockerfile
      context: .
    image: home-automation-web-client
    volumes:
      - ./web.client:/usr/src/app
      - /usr/src/app/node_modules
      - ./libraries/javascript:/usr/src/libraries/javascript
      - /usr/src/libraries/javascript/node_modules
    ports:
      - 7000:8080
