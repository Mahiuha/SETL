// Code generated by jrpc. DO NOT EDIT.

package devicedef

import (
	"context"

	"github.com/jakewright/home-automation/libraries/go/firehose"
	"github.com/jakewright/home-automation/libraries/go/oops"
)

// Publish publishes the event to the Firehose
func (m *DeviceStateChangedEvent) Publish(ctx context.Context, p firehose.Publisher) error {
	if err := m.Validate(); err != nil {
		return err
	}

	return p.Publish(ctx, "device-state-changed", m)
}

// DeviceStateChangedEventHandler implements the necessary functions to be a Firehose handler
type DeviceStateChangedEventHandler func(*DeviceStateChangedEvent) firehose.Result

// HandleEvent handles the Firehose event
func (h DeviceStateChangedEventHandler) HandleEvent(ctx context.Context, decode firehose.Decoder) firehose.Result {
	var body DeviceStateChangedEvent
	if err := decode(&body); err != nil {
		return firehose.Discard(oops.WithMessage(err, "failed to unmarshal payload"))
	}
	return h(&body)
}
